{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/styles/GlobalStyle.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","GlobalStyle","createGlobalStyle","_templateObject","Layout","_ref","children","_856328897","data","react_default","Fragment","styles_GlobalStyle","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,0rDCPJ,IA8EeE,EA9EKC,YAAHC,YC2BFC,IAtBA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACNC,EAAAC,KASV,OACEC,EAAAX,EAAAC,cAAAU,EAAAX,EAAAY,SAAA,KACED,EAAAX,EAAAC,cAACY,EAAD,MACAF,EAAAX,EAAAC,cAAA,YAAOO,sFCRb,SAASM,EAATP,GAAiD,IAAlCQ,EAAkCR,EAAlCQ,YAAaC,EAAqBT,EAArBS,KAAMC,EAAeV,EAAfU,KAAMf,EAASK,EAATL,MAC9BgB,EADuCC,EAAAT,KACvCQ,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAtB,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,eAAgB,CACdR,QAEFd,MAAOA,EACPuB,cAAa,QAAUP,EAAKG,aAAanB,MACzCe,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASzB,GAEX,CACE0B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASzB,GAEX,CACEwB,KAAI,sBACJC,QAASP,IAEXU,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-404-js-96f529f6e12af007ad14.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  font-family: 'Montserrat', sans-serif;\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  font-size: 10px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  transition: overflow 0.3s;\r\n}\r\nbody {\r\n  margin: 0;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  height: 100%;\r\n}\r\n* {\r\n  color: #05324F;\r\n  font-family: 'Montserrat', sans-serif;\r\n  box-sizing: border-box;\r\n}\r\n.noscroll { \r\n  overflow: hidden;\r\n}\r\n@keyframes delay-overflow {\r\n  from { overflow: auto; }\r\n}\r\n#gatsby-focus-wrapper{\r\n  position: relative;\r\n}\r\nh1, h2, h3, h4, h5, ul, ol {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nmain{\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n/* Navigation */\r\n.navbar-hidden {\r\n  transform: translateY(-80px);\r\n  color: white;\r\n}\r\n.nav-top {\r\n    background: transparent !important;\r\n}\r\n.nav-top .logo{\r\n    display: none !important;\r\n}\r\n.nav-top {\r\n  ul{\r\n    li{\r\n      @media screen and (min-width: 681px){\r\n      a{\r\n        color: #05324F !important;\r\n      }\r\n    }\r\n    }\r\n  }\r\n  .hamburger{\r\n    .hamburger-box{\r\n          .hamburger-inner{\r\n            &::before, &::after{\r\n              background-color: #05324F!important;\r\n            }\r\n          }\r\n        }\r\n    span{\r\n      span, &::before, &::after{\r\n        background-color: #05324F !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n/* End Navigation */\r\n`;\r\n\r\nexport default GlobalStyle;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport GlobalStyle from '../components/styles/GlobalStyle'\r\nimport \"./hamburgers.min.css\"\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <>\r\n      <GlobalStyle/>\r\n      <main>{children}</main>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}